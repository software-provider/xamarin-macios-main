<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <LangVersion>latest</LangVersion>
    <WarningsAsErrors>Nullable</WarningsAsErrors>
    <DefineConstants>$(DefineConstants);MSBUILD_TASKS</DefineConstants>
    <NoWarn>$(NoWarn);NU1603</NoWarn> <!-- Xamarin.Messaging.Build.Common 1.6.24 depends on Merq (>= 1.1.0) but Merq 1.1.0 was not found. An approximate best match of Merq 1.1.4 was resolved. -->
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="System.Text.Json" Version="4.7.0" />
    <PackageReference Include="Mono.Cecil" Version="0.11.4" />
    <!-- Compile against Microsoft.Build* NuGet refs, but do not copy to OutputDir. -->
    <PackageReference Include="Microsoft.Build" Version="15.9.20" IncludeAssets="compile" />
    <PackageReference Include="Microsoft.Build.Framework" Version="16.8.0" IncludeAssets="compile" />
    <PackageReference Include="Microsoft.Build.Tasks.Core" Version="16.8.0" IncludeAssets="compile" Aliases="Microsoft_Build_Tasks_Core" />
    <PackageReference Include="Microsoft.Build.Utilities.Core" Version="16.8.0" IncludeAssets="compile" />
    <PackageReference Include="Xamarin.Messaging.Build.Client" Version="$(MessagingVersion)" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\external\Xamarin.MacDev\Xamarin.MacDev\Xamarin.MacDev.csproj" />
    <ProjectReference Include="..\Xamarin.Localization.MSBuild\Xamarin.Localization.MSBuild.csproj">
      <ReferenceSourceTarget>ProjectReference</ReferenceSourceTarget>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="..\..\tools\common\ApplePlatform.cs">
      <Link>ApplePlatform.cs</Link>
    </Compile>
    <Compile Include="..\..\tools\common\StringUtils.cs">
      <Link>StringUtils.cs</Link>
    </Compile>
    <Compile Include="..\..\tools\common\FileCopier.cs">
        <Link>FileCopier.cs</Link>
    </Compile>
    <Compile Include="..\..\tools\common\TargetFramework.cs">
      <Link>TargetFramework.cs</Link>
    </Compile>
    <Compile Include="..\..\tools\common\Execution.cs">
      <Link>Execution.cs</Link>
    </Compile>
    <Compile Include="..\..\tools\common\PathUtils.cs">
      <Link>PathUtils.cs</Link>
    </Compile>
    <Compile Include="..\..\tools\common\PListExtensions.cs">
      <Link>PListExtensions.cs</Link>
    </Compile>
    <Compile Include="..\..\tools\common\MachO.cs">
      <Link>MachO.cs</Link>
    </Compile>
    <Compile Include="..\..\tools\common\error.cs">
      <Link>error.cs</Link>
    </Compile>
    <Compile Include="..\..\src\ObjCRuntime\ErrorHelper.cs">
      <Link>ErrorHelper.cs</Link>
    </Compile>
    <Compile Include="..\..\src\ObjCRuntime\RuntimeException.cs">
      <Link>external\RuntimeException.cs</Link>
    </Compile>
    <Compile Include="..\..\tools\common\FileUtils.cs">
      <Link>external\FileUtils.cs</Link>
    </Compile>
    <Compile Include="..\..\tools\common\NullableAttributes.cs">
      <Link>external\NullableAttributes.cs</Link>
    </Compile>
    <Compile Include="..\Versions.dotnet.g.cs">
      <Link>Versions.dotnet.g.cs</Link>
    </Compile>
    <Compile Remove="Errors.designer.cs" /> <!-- The 'CoreResGen' target will add it again from the EmbeddedResource item, this avoids a warning about the file being compiled twice -->
    <Compile Include="..\..\tools\common\SdkVersions.cs">
      <Link>external\SdkVersions.cs</Link>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="../../tools/mtouch/Errors.resx">

    <!--

      The Xamarin.MacDev.Tasks.sln solution is build with dotnet, while other
      projects are still built with msbuild. This becomes a problem when
      generating Errors.designer.cs, because depending on the runtime the
      output is different.

      This means that the Errors.designer.cs will sometimes randomly change
      (depending on which project re-generated the file), leaving the file
      modified in git. This is quite annoying, but it also breaks the api
      comparison, which depends on the build not leaving modified files
      behind. So for now, we generate Errors.designer.cs separately
      for Xamarin.MacDev.Tasks.sln to not conflict with the mtouch version.

    -->

      <Type>Resx</Type>
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Errors.designer.cs</LastGenOutput>
      <CustomToolNamespace>Xamarin.Bundler</CustomToolNamespace>
      <ManifestResourceName>Xamarin.Bundler.Errors</ManifestResourceName>
      <StronglyTypedFileName>Errors.designer.cs</StronglyTypedFileName>
      <StronglyTypedLanguage>CSharp</StronglyTypedLanguage>
      <StronglyTypedNamespace>Xamarin.Bundler</StronglyTypedNamespace>
      <StronglyTypedClassName>Errors</StronglyTypedClassName>
      <GenerateResource>true</GenerateResource>
      <PublicClass>true</PublicClass>
    </EmbeddedResource>
    <EmbeddedResource Include="../../tools/mtouch/TranslatedAssemblies\Errors.cs.resx">
      <Link>Errors.cs.resx</Link>
      <ManifestResourceName>Xamarin.Bundler.Errors.cs</ManifestResourceName>
    </EmbeddedResource>
    <EmbeddedResource Include="../../tools/mtouch/TranslatedAssemblies\Errors.de.resx">
      <Link>Errors.de.resx</Link>
      <ManifestResourceName>Xamarin.Bundler.Errors.de</ManifestResourceName>
    </EmbeddedResource>
    <EmbeddedResource Include="../../tools/mtouch/TranslatedAssemblies\Errors.es.resx">
      <Link>Errors.es.resx</Link>
      <ManifestResourceName>Xamarin.Bundler.Errors.es</ManifestResourceName>
    </EmbeddedResource>
    <EmbeddedResource Include="../../tools/mtouch/TranslatedAssemblies\Errors.fr.resx">
      <Link>Errors.fr.resx</Link>
      <ManifestResourceName>Xamarin.Bundler.Errors.fr</ManifestResourceName>
    </EmbeddedResource>
    <EmbeddedResource Include="../../tools/mtouch/TranslatedAssemblies\Errors.it.resx">
      <Link>Errors.it.resx</Link>
      <ManifestResourceName>Xamarin.Bundler.Errors.it</ManifestResourceName>
    </EmbeddedResource>
    <EmbeddedResource Include="../../tools/mtouch/TranslatedAssemblies\Errors.ja.resx">
      <Link>Errors.ja.resx</Link>
      <ManifestResourceName>Xamarin.Bundler.Errors.ja</ManifestResourceName>
    </EmbeddedResource>
    <EmbeddedResource Include="../../tools/mtouch/TranslatedAssemblies\Errors.ko.resx">
      <Link>Errors.ko.resx</Link>
      <ManifestResourceName>Xamarin.Bundler.Errors.ko</ManifestResourceName>
    </EmbeddedResource>
    <EmbeddedResource Include="../../tools/mtouch/TranslatedAssemblies\Errors.pl.resx">
      <Link>Errors.pl.resx</Link>
      <ManifestResourceName>Xamarin.Bundler.Errors.pl</ManifestResourceName>
    </EmbeddedResource>
    <EmbeddedResource Include="../../tools/mtouch/TranslatedAssemblies\Errors.pt-BR.resx">
      <Link>Errors.pt-BR.resx</Link>
      <ManifestResourceName>Xamarin.Bundler.Errors.pt-BR</ManifestResourceName>
    </EmbeddedResource>
    <EmbeddedResource Include="../../tools/mtouch/TranslatedAssemblies\Errors.ru.resx">
      <Link>Errors.ru.resx</Link>
      <ManifestResourceName>Xamarin.Bundler.Errors.ru</ManifestResourceName>
    </EmbeddedResource>
    <EmbeddedResource Include="../../tools/mtouch/TranslatedAssemblies\Errors.tr.resx">
      <Link>Errors.tr.resx</Link>
      <ManifestResourceName>Xamarin.Bundler.Errors.tr</ManifestResourceName>
    </EmbeddedResource>
    <EmbeddedResource Include="../../tools/mtouch/TranslatedAssemblies\Errors.zh-Hans.resx">
      <Link>Errors.zh-Hans.resx</Link>
      <ManifestResourceName>Xamarin.Bundler.Errors.zh-Hans</ManifestResourceName>
    </EmbeddedResource>
    <EmbeddedResource Include="../../tools/mtouch/TranslatedAssemblies\Errors.zh-Hant.resx">
      <Link>Errors.zh-Hant.resx</Link>
      <ManifestResourceName>Xamarin.Bundler.Errors.zh-Hant</ManifestResourceName>
    </EmbeddedResource>
  </ItemGroup>
</Project>
