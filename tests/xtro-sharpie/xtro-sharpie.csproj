<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="../../eng/Versions.props" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{D890A042-93C2-4B4B-ABF8-7ECBCBF059D8}</ProjectGuid>
    <OutputType>Exe</OutputType>
    <RootNamespace>xtrosharpie</RootNamespace>
    <AssemblyName>xtro-sharpie</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug</OutputPath>
    <DefineConstants>DEBUG;</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <ConsolePause>false</ConsolePause>
    <Commandlineparameters>../../iphoneos12.0-arm64.pch /Library/Frameworks/Xamarin.iOS.framework/Versions/Current//lib/64bits/iOS/Xamarin.iOS.dll</Commandlineparameters>
    <PlatformTarget>x64</PlatformTarget>
    <LangVersion>latest</LangVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>full</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release</OutputPath>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Externalconsole>true</Externalconsole>
    <LangVersion>latest</LangVersion>
  </PropertyGroup>
  <Import Project="pch-info.proj" />
  <PropertyGroup Condition=" '$(RunConfiguration)' == 'watchOS' ">
    <StartAction>Project</StartAction>
    <StartArguments>$(WATCHOS_PCH) ../../_ios-build/Library/Frameworks/Xamarin.iOS.framework/Versions/git/lib/32bits/watchOS/Xamarin.WatchOS.dll</StartArguments>
    <StartWorkingDirectory>.</StartWorkingDirectory>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(RunConfiguration)' == 'iOS' ">
    <StartAction>Project</StartAction>
    <StartArguments>$(iOS_PCH) ../../_ios-build/Library/Frameworks/Xamarin.iOS.framework/Versions/git/lib/64bits/iOS/Xamarin.iOS.dll ../../_ios-build/Library/Frameworks/Xamarin.iOS.framework/Versions/Current/lib/mono/Xamarin.iOS/OpenTK-1.0.dll</StartArguments>
    <StartWorkingDirectory>.</StartWorkingDirectory>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(RunConfiguration)' == 'tvOS' ">
    <StartAction>Project</StartAction>
    <StartArguments>$(tvOS_PCH) ../../_ios-build/Library/Frameworks/Xamarin.iOS.framework/Versions/git/lib/mono/Xamarin.TVOS/Xamarin.TVOS.dll ../../_ios-build/Library/Frameworks/Xamarin.iOS.framework/Versions/git/lib/mono/Xamarin.TVOS/OpenTK-1.0.dll</StartArguments>
    <StartWorkingDirectory>.</StartWorkingDirectory>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(RunConfiguration)' == 'macOS' ">
    <StartAction>Project</StartAction>
    <StartArguments>$(macOS_PCH) ../../_mac-build/Library/Frameworks/Xamarin.Mac.framework/Versions/git/lib/64bits/mobile/Xamarin.Mac.dll</StartArguments>
    <StartWorkingDirectory>.</StartWorkingDirectory>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(RunConfiguration)' == 'iOS (.NET)' ">
    <StartAction>Project</StartAction>
    <StartArguments>$(iOS_PCH) --output-directory api-annotations-dotnet --lib ../../packages/microsoft.netcore.app.ref/$(MicrosoftNETCoreAppRefPackageVersion)/ref/$(DOTNET_TFM) $(iOS_DLL)</StartArguments>
    <StartWorkingDirectory>.</StartWorkingDirectory>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(RunConfiguration)' == 'tvOS (.NET)' ">
    <StartAction>Project</StartAction>
    <StartArguments>$(tvOS_PCH) --output-directory api-annotations-dotnet --lib ../../packages/microsoft.netcore.app.ref/$(MicrosoftNETCoreAppRefPackageVersion)/ref/$(DOTNET_TFM) $(tvOS_DLL)</StartArguments>
    <StartWorkingDirectory>.</StartWorkingDirectory>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(RunConfiguration)' == 'macOS (.NET)' ">
    <StartAction>Project</StartAction>
    <StartArguments>$(macOS_PCH) --output-directory api-annotations-dotnet --lib ../../packages/microsoft.netcore.app.ref/$(MicrosoftNETCoreAppRefPackageVersion)/ref/$(DOTNET_TFM) $(macOS_DLL)</StartArguments>
    <StartWorkingDirectory>.</StartWorkingDirectory>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(RunConfiguration)' == 'MacCatalyst (.NET)' ">
    <StartAction>Project</StartAction>
    <StartArguments>$(MacCatalyst_PCH) --output-directory api-annotations-dotnet --lib ../../packages/microsoft.netcore.app.ref/$(MicrosoftNETCoreAppRefPackageVersion)/ref/$(DOTNET_TFM) $(MacCatalyst_DLL)</StartArguments>
    <StartWorkingDirectory>.</StartWorkingDirectory>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="Clang">
      <HintPath>\Library\Frameworks\ObjectiveSharpie.framework\Versions\Current\bin\Clang.dll</HintPath>
    </Reference>
    <PackageReference Include="Mono.Cecil" Version="0.11.4" />
    <PackageReference Include="System.ValueTuple" Version="4.4.0" />
    <PackageReference Include="Mono.Options" Version="6.12.0.148" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Program.cs" />
    <Compile Include="DllImportCheck.cs" />
    <Compile Include="ObjCProtocolCheck.cs" />
    <Compile Include="ObjCInterfaceCheck.cs" />
    <Compile Include="EnumCheck.cs" />
    <Compile Include="Helpers.cs" />
    <Compile Include="Runner.cs" />
    <Compile Include="FieldCheck.cs" />
    <Compile Include="SelectorCheck.cs" />
    <Compile Include="DesignatedInitializerCheck.cs" />
    <Compile Include="SimdCheck.cs" />
    <Compile Include="Log.cs" />
    <Compile Include="RequiresSuperCheck.cs" />
    <Compile Include="Filter.cs" />
    <Compile Include="DeprecatedCheck.cs" />
    <Compile Include="AttributeHelpers.cs" />
    <Compile Include="VersionHelpers.cs" />
    <Compile Include="ReleaseAttributeCheck.cs" />
    <Compile Include="NullabilityCheck.cs" />
    <Compile Include="UIAppearanceCheck.cs" />
    <Compile Include="MapNamesCheck.cs" />
  </ItemGroup>
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <Target Name="AfterBuild">
    <Copy SourceFiles="\Library\Frameworks\ObjectiveSharpie.framework\Versions\Current\bin\libclang-mono.dylib" DestinationFolder="$(TargetDir)" />
  </Target>
</Project>
